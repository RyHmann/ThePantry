{"version":3,"sources":["./ClientApp/app/meal-detail/meal-detail.component.html","./ClientApp/app/meal-detail/meal-detail.component.ts","./ClientApp/environments/environment.ts","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/main.ts","./ClientApp/app/meals/meals.component.html","./ClientApp/app/meals/meals.component.ts","./ClientApp/app/meal-search/meal-search.component.ts","./ClientApp/app/meal-search/meal-search.component.html","./ClientApp/app/meal.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOY,qEACI;IAAA,oEAAG;IAAA,uDAAkC;IAAA,4DAAI;IAC7C,4DAAK;;;IADE,0DAAkC;IAAlC,kGAAkC;;;IARrD,sEACI;IAAA,qEAAI;IAAA,uDAAyB;;IAAA,4DAAK;IAClC,sEACI;IAAA,oEAAG;IAAA,sEAAW;IAAA,4DAAI;IAClB,oEAAG;IAAA,uDAAoB;IAAA,4DAAI;IAC3B,oEAAG;IAAA,wEAAY;IAAA,4DAAI;IACnB,sEACI;IAAA,qHAEK;IACT,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAXE,0DAAyB;IAAzB,kJAAyB;IAGtB,0DAAoB;IAApB,wFAAoB;IAGY,0DAAmB;IAAnB,4FAAmB;;ACCvD,MAAM,mBAAmB;IAI9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFAPU,mBAAmB;mGAAnB,mBAAmB;QDRhC,gHAYM;;QAZA,0EAAU;;;;;;;;;;;;;;AEAhB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,yEAA2B;QAC3B,mEAAe;;QAFX,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;ACCf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACX;AAEE;AAC2B;AACA;AACjB;;AAmBlD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAJP,EACV,YANM;YACL,uEAAa;YACb,qEAAgB;YAChB,0DAAW;SACd;mIAKU,SAAS,mBAdlB,2DAAY;QACZ,sFAAmB;QACnB,sFAAmB;QACnB,qEAAc,aAGZ,uEAAa;QACb,qEAAgB;QAChB,0DAAW;;;;;;;;;;;;;;;;;;;ACrB8B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ICThC,wEACI;IAD2B,kVAAwB;IACnD,0EAAmB;IAAA,uDAAa;IAAA,4DAAO;IAC3C,4DAAK;;;;IAFmD,sGAAsC;IACvE,0DAAa;IAAb,6EAAa;;ACMjC,MAAM,cAAc;IAIvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAE5C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IACvE,CAAC;IAED,QAAQ,CAAC,IAAU;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;;4EAlBQ,cAAc;8FAAd,cAAc;QDT3B,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,wEACI;QAAA,wGAEK;QACT,4DAAK;QACL,4EAAiD;;QAJxB,0DAAQ;QAAR,8EAAQ;QAIpB,0DAAqB;QAArB,kFAAqB;;;;;;;;;;;;;;;;;;AEC3B,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,oEAAG;QAAA,6EAAkB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;ACSlB,MAAM,WAAW;IAGpB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAF7B,aAAQ,GAAG,4CAA4C;IAEtB,CAAC;IAE1C,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;;sEAPQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;ACPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["<div *ngIf=\"meal\">\r\n    <h2>{{meal.name | uppercase}}</h2>\r\n    <div>\r\n        <p>Description</p>\r\n        <p>{{meal.description}}</p>\r\n        <p>Ingredients:</p>\r\n        <ul>\r\n            <li *ngFor=\"let mealIngredient of meal.ingredients\">\r\n                <p>{{mealIngredient.ingredient.name}}</p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Meal } from '../meal';\n\n@Component({\n  selector: 'meal-detail',\n  templateUrl: './meal-detail.component.html',\n  styleUrls: ['./meal-detail.component.css']\n})\nexport class MealDetailComponent implements OnInit {\n\n    @Input() meal: Meal | undefined\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'The Pantry';\n}\n","<h3>{{ title }}</h3>\r\n<meal-search></meal-search>\r\n<meals></meals>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MealSearchComponent } from './meal-search/meal-search.component';\nimport { MealDetailComponent } from './meal-detail/meal-detail.component';\nimport { MealsComponent } from './meals/meals.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSearchComponent,\n    MealDetailComponent,\n    MealsComponent,\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n  ],\n    providers: [\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<h2>Available Meals</h2>\r\n<ul class=\"meals\">\r\n    <li *ngFor=\"let meal of meals\" (click)=\"onSelect(meal)\" [class.selected]=\"meal===selectedMeal\">\r\n        <span class=\"meal\">{{meal.name}}</span>\r\n    </li>\r\n</ul>\r\n<meal-detail [meal]=\"selectedMeal\"></meal-detail>","import { Component, OnInit } from '@angular/core';\nimport { Meal } from '../meal';\nimport { MealService } from '../meal.service';\n\n@Component({\n  selector: 'meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n    meals: Meal[] | undefined\n    selectedMeal: Meal | undefined\n\n    constructor(private mealService: MealService) {\n        \n    }\n\n    ngOnInit(): void {\n        this.getMeals();\n    }\n\n    getMeals(): void {\n        this.mealService.getMeals().subscribe(meals => this.meals = meals);\r\n    }\n\n    onSelect(meal: Meal): void {\n        this.selectedMeal = meal;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'meal-search',\n  templateUrl: './meal-search.component.html',\n  styleUrls: ['./meal-search.component.css']\n})\nexport class MealSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>meal-search works!</p>\n","import { Injectable } from '@angular/core';\nimport { Meal } from './meal';\nimport { MEALS } from './mock-meals';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealService {\n    private mealsUrl = '/api/mealfinder/include?ingr=onion, tomato'\n\n    constructor(private _http: HttpClient) { }\n\n    getMeals(): Observable<Meal[]> {\n        return this._http.get<Meal[]>(this.mealsUrl);\r\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
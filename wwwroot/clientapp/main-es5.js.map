{"version":3,"sources":["webpack:///ClientApp/app/meal-detail/meal-detail.component.html","webpack:///ClientApp/app/meal-detail/meal-detail.component.ts","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/meals/meals.component.html","webpack:///ClientApp/app/meals/meals.component.ts","webpack:///ClientApp/app/meal-search/meal-search.component.ts","webpack:///ClientApp/app/meal-search/meal-search.component.html","webpack:///ClientApp/app/meal.service.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MealDetailComponent","environment","production","AppComponent","title","AppModule","bootstrapModule","err","console","error","MealsComponent","mealService","getMeals","subscribe","meals","meal","selectedMeal","MealSearchComponent","searchTerms","term","next","meals$","pipe","searchMeals","search","MealService","_http","mealsUrl","get","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div *ngIf=\"meal\">\r\n    <h2>{{meal.name | uppercase}}</h2>\r\n    <div>\r\n        <p>Description</p>\r\n        <p>{{meal.description}}</p>\r\n        <p>Link: {{meal.url}}</p>\r\n        <p>Thumbnail: {{meal.thumbnail}}</p>\r\n        <p>Ingredients:</p>\r\n        <ul>\r\n            <li *ngFor=\"let ingredient of meal.ingredients\">\r\n                <p>{{ingredient.name}}</p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Meal } from '../meal';\n\n@Component({\n  selector: 'meal-detail',\n  templateUrl: './meal-detail.component.html',\n  styleUrls: ['./meal-detail.component.css']\n})\nexport class MealDetailComponent implements OnInit {\n\n    @Input() meal: Meal | undefined\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'The Pantry';\n}\n","<h3>{{ title }}</h3>\r\n<meal-search></meal-search>\r\n<meals></meals>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MealSearchComponent } from './meal-search/meal-search.component';\nimport { MealDetailComponent } from './meal-detail/meal-detail.component';\nimport { MealsComponent } from './meals/meals.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSearchComponent,\n    MealDetailComponent,\n    MealsComponent,\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n  ],\n    providers: [\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<h2>Available Meals</h2>\r\n<ul class=\"meals\">\r\n    <li *ngFor=\"let meal of meals\" (click)=\"onSelect(meal)\" [class.selected]=\"meal===selectedMeal\">\r\n        <span class=\"meal\">{{meal.name}}</span>\r\n    </li>\r\n</ul>\r\n<meal-detail [meal]=\"selectedMeal\"></meal-detail>","import { Component, OnInit } from '@angular/core';\nimport { Meal } from '../meal';\nimport { MealService } from '../meal.service';\n\n@Component({\n  selector: 'meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n    meals: Meal[] | undefined\n    selectedMeal: Meal | undefined\n\n    constructor(private mealService: MealService) {\n        \n    }\n\n    ngOnInit(): void {\n        this.getMeals();\n    }\n\n    getMeals(): void {\n        this.mealService.getMeals().subscribe(meals => this.meals = meals);\r\n    }\n\n    onSelect(meal: Meal): void {\n        this.selectedMeal = meal;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Meal } from '../meal';\nimport { MealService } from '../meal.service';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\n@Component({\n  selector: 'meal-search',\n  templateUrl: './meal-search.component.html',\n  styleUrls: ['./meal-search.component.css']\n})\nexport class MealSearchComponent implements OnInit {\n    meals$: Observable<Meal[]> | undefined;\n    private searchTerms = new Subject<string>();\n\n    constructor(private mealService: MealService) { }\n\n    // Push a search term into the observable stream\n    search(term: string): void {\n        this.searchTerms.next(term);\r\n    }\n\n    ngOnInit(): void {\n        this.meals$ = this.searchTerms.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            switchMap((term: string) => this.mealService.searchMeals(term))\n        );\n  }\n\n}\n","<div id=\"search component\">\r\n    <h4><label for=\"search-box\">Meal Finder</label></h4>\r\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\"/>\r\n    <ul class=\"search-result\">\r\n        <li *ngFor=\"let meal of meals$ | async\">\r\n            <p>{{meal.name}}</p>\r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\nimport { Meal } from './meal';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealService {\n    private mealsUrl = '/api/mealfinder/include?ingr=';\n\n    constructor(private _http: HttpClient) { }\n\n    getMeals(): Observable<Meal[]> {\n        return this._http.get<Meal[]>(this.mealsUrl);\r\n    }\n\n    searchMeals(term: string): Observable<Meal[]> {\n        if (!term) {\r\n            return of([]);\r\n        }\r\n        return this._http.get<Meal[]>(`${this.mealsUrl}${term}}`);\r\n    }\n}\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}
{"version":3,"sources":["webpack:///ClientApp/app/meal-detail/meal-detail.component.html","webpack:///ClientApp/app/meal-detail/meal-detail.component.ts","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/truncate.pipe.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/active-ingredients/active-ingredients.component.ts","webpack:///ClientApp/app/active-ingredients/active-ingredients.component.html","webpack:///ClientApp/app/meals/meals.component.html","webpack:///ClientApp/app/meals/meals.component.ts","webpack:///ClientApp/app/meal-search/meal-search.component.ts","webpack:///ClientApp/app/meal-search/meal-search.component.html","webpack:///ClientApp/app/meal.service.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MealDetailComponent","environment","production","AppComponent","title","AppModule","TruncatePipe","text","charLimit","ellipsis","truncateIndex","substr","lastIndexOf","length","bootstrapModule","err","console","error","ActiveIngredientsComponent","MealsComponent","mealService","meal","selectedMeal","$event","stopPropagation","MealSearchComponent","searchTerms","showSearchResults","ingredients$","pipe","term","split","pop","trim","searchIngredients","queryString","next","ingredient","incorporateSelectedIngredient","log","meals$","activeIngredients$","searchMeals","confirmIngredients","stringArray","push","newString","join","search","MealService","_http","mealsUrl","ingredientsUrl","activeIngredientsUrl","get","x","handleError","operation","result","message","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div *ngIf=\"meal\">\r\n    <div class=\"card-meal-detail\">\r\n        <img />\r\n        <div class=\"card-container\">\r\n            <h4>{{meal.name | uppercase}}</h4>\r\n            <p>{{meal.description}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <h2>{{meal.name | uppercase}}</h2>\r\n    <div>\r\n        <p>Description</p>\r\n        <p>{{meal.description}}</p>\r\n        <p>Link: {{meal.url}}</p>\r\n        <p>Thumbnail: {{meal.thumbnail}}</p>\r\n        <p>Ingredients:</p>\r\n        <ul>\r\n            <li *ngFor=\"let ingredient of meal.ingredients\">\r\n                <p>{{ingredient.name}}</p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Meal } from '../meal';\n\n@Component({\n  selector: 'meal-detail',\n  templateUrl: './meal-detail.component.html',\n  styleUrls: ['./meal-detail.component.css']\n})\nexport class MealDetailComponent implements OnInit {\n\n    @Input() meal: Meal | undefined\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'The Pantry';\n}\n","<meal-search></meal-search>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MealSearchComponent } from './meal-search/meal-search.component';\nimport { MealDetailComponent } from './meal-detail/meal-detail.component';\nimport { MealsComponent } from './meals/meals.component';\nimport { TruncatePipe } from './truncate.pipe';\nimport { ActiveIngredientsComponent } from './active-ingredients/active-ingredients.component';\r\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSearchComponent,\n    MealDetailComponent,\n    MealsComponent,\n    TruncatePipe,\n    ActiveIngredientsComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n  ],\n    providers: [\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n\r\n@Pipe({ name: 'truncate' })\r\nexport class TruncatePipe implements PipeTransform {\r\n    transform(text: string, charLimit = 50, ellipsis = '...'): string {\r\n        let truncateIndex = text.substr(0, charLimit).lastIndexOf(\" \");\r\n        return text.length > charLimit ? text.substr(0, truncateIndex) + ellipsis : text;\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'active-ingredients',\n  templateUrl: './active-ingredients.component.html',\n  styleUrls: ['./active-ingredients.component.css']\n})\nexport class ActiveIngredientsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"active-ingredients\">\r\n    <a>tomato</a>\r\n    <a>onion</a>\r\n    <a>garlic</a>\r\n    <a>strawberry</a>\r\n</div>","<div class=\"grid-container\" *ngIf=\"availableMeals\">\r\n    <div class=\"card\" *ngFor=\"let meal of availableMeals | async\" (click)=\"onSelect(meal)\" [class.selected]=\"meal===selectedMeal\">\r\n        <img src=\"C:\\Repos\\csharp\\Projects\\ThePantry\\wwwroot\\clientapp\\assets\\pinchofyum_elotequeso.jpeg\"/>\r\n        <div class=\"card-container\">\r\n            <a href=\"{{meal.url}}\" target=\"_blank\">\r\n                <h4><b>{{meal.name}}</b></h4>\r\n            </a>\r\n            <p>{{meal.description | truncate: 145 }}</p>\r\n            <div class=\"meal-ingredient-container\">\r\n                <p class=\"ingredient-list\">Ingredients:</p>\r\n                <div class=\"meal-ingredient-container\">\r\n                    <span class=\"ingredients\" *ngFor=\"let ingredient of meal.ingredients\">{{ingredient.name}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Meal } from '../meal';\nimport { MealService } from '../meal.service';\n\n@Component({\n  selector: 'meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n    @Input() availableMeals: Observable<Meal[]> | undefined;\n    selectedMeal: Meal | undefined\n\n    constructor(private mealService: MealService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSelect(meal: Meal): void {\n        this.selectedMeal = meal;\n    }\n}\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { MealService } from '../meal.service';\r\nimport { debounceTime, distinctUntilChanged, switchMap, map } from 'rxjs/operators';\r\n\r\nimport { Meal } from '../meal';\r\nimport { Ingredient } from '../ingredient';\r\nimport { ActiveIngredient } from '../activeingredient';\r\n\r\n@Component({\r\n  selector: 'meal-search',\r\n  templateUrl: './meal-search.component.html',\r\n  styleUrls: ['./meal-search.component.css']\r\n})\r\nexport class MealSearchComponent implements OnInit {\r\n    ingredients$: Observable<Ingredient[]> | undefined;\r\n    meals$: Observable<Meal[]> | undefined;\r\n    activeIngredients$: Observable<ActiveIngredient[]> | undefined;\r\n    private searchTerms = new Subject<string>();\r\n    queryString: string | undefined;\r\n    showSearchResults: boolean = false;\r\n\r\n    @HostListener('document:click', ['$event']) onDocumentClick() {\r\n        this.showSearchResults = false;\r\n    }\r\n\r\n    constructor(private mealService: MealService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ingredients$ = this.searchTerms.pipe(\r\n            debounceTime(300),\r\n            distinctUntilChanged(),\r\n            // Map ignores all string items except for the last comma separated value\r\n            map((term: string) => term.split(\",\").pop()!.trim()),\r\n            switchMap((term: string) => this.mealService.searchIngredients(term))\r\n        );\r\n    }\r\n\r\n    // Push a search term into the observable stream\r\n    search(term: string): void {\r\n        this.showSearchResults = true;\r\n        this.queryString = term;\r\n        this.searchTerms.next(term);\r\n    }\r\n\r\n    selectIngredient(ingredient: string): void {\r\n        // TODO: Change focus from search results to search bar on click\r\n        this.incorporateSelectedIngredient(ingredient);\r\n\r\n        // Clear search results\r\n        this.searchTerms.next(\" \");\r\n\r\n        // TODO: clear this jank unit testing\r\n        console.log(`Selected: ${ingredient}`);\r\n        console.log(\"Current Query: \" + this.queryString);\r\n    }\r\n\r\n    searchMeals(): void {\r\n        // Clear current search results\r\n        this.meals$ = of([]);\r\n        this.activeIngredients$ = of([]);\r\n\r\n        // TODO: clear jank unit testing\r\n        console.log(\"Current Query @ Button Press: \" + this.queryString);\r\n\r\n        // Return results based on new query string\r\n        this.meals$ = this.mealService.searchMeals(this.queryString!);\r\n        this.activeIngredients$ = this.mealService.confirmIngredients(this.queryString!);\r\n    }\r\n\r\n    private incorporateSelectedIngredient(ingredient: string): void {\r\n        // Splits query string into array, removes the last item, inserts the user selected ingredient, and updates the queryString\r\n        let stringArray = this.queryString?.split(\",\");\r\n        stringArray?.pop();\r\n        stringArray?.push(ingredient + \", \");\r\n        let newString = stringArray?.join(\", \");\r\n        this.queryString = newString;\r\n    }\r\n}\r\n","<div class=\"meal-finder-container\">\r\n    <div class=\"search-bar-heading-container\">\r\n        <h4>Enter ingredients separated by commas</h4>\r\n    </div>\r\n    <div class=\"search-bar-container\">\r\n        <input type=text class=\"search-bar\" placeholder=\"ie: parsley, sage, rosemary, thyme\" #searchBox [ngModel]=\"queryString\" (ngModelChange)=\"queryString=$event\" id=\"search-box\" (input)=\"search(searchBox.value)\" (keyup.enter)=\"searchMeals()\">\r\n        <div class=\"search-results-container\" (click)=\"$event.stopPropagation()\" *ngIf=\"showSearchResults\">\r\n            <ul class=\"search-result-list\">\r\n                <li *ngFor=\"let ingredient of ingredients$ | async\">\r\n                    <a #ingredientResult (click)=\"selectIngredient(ingredientResult.innerText); searchBox.focus()\">{{ingredient.name}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"search-button-container\">\r\n        <button class=\"search-button\" type=submit (click)=\"searchMeals()\">Search</button>\r\n    </div>\r\n    <div class=\"active-ingredients-container\">\r\n        <active-ingredients></active-ingredients>\r\n    </div> \r\n</div>\r\n<meals [availableMeals]=\"meals$\"></meals>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Meal } from './meal';\r\nimport { Ingredient } from './ingredient';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ActiveIngredient } from './activeingredient';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MealService {\r\n    private mealsUrl = '/api/mealfinder/include?ingr=';\r\n    private ingredientsUrl = '/api/ingredient/';\r\n    private activeIngredientsUrl = '/api/ingredient/include?ing=';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getMeals(): Observable<Meal[]> {\r\n        return this._http.get<Meal[]>(this.mealsUrl);\r\n    }\r\n\r\n    searchMeals(term: string): Observable<Meal[]> {\r\n        if (!term.trim) {\r\n            return of([]);\r\n        }\r\n        return this._http.get<Meal[]>(`${this.mealsUrl}${term}`)\r\n            .pipe(\r\n                tap(x => x.length ? \r\n                    console.log(`Found meals matching \"${term}\"`) :\r\n                    console.log(`No meals matching \"${term}\"`)),\r\n                catchError(this.handleError<Meal[]>('searchMeals', []))\r\n                    );\r\n    }\r\n\r\n    searchIngredients(term: string): Observable<Ingredient[]> {\r\n        if (term.trim().length < 3) {\r\n            return of([]);\r\n        }\r\n        return this._http.get<Ingredient[]>(`${this.ingredientsUrl}${term}`)\r\n            .pipe(\r\n                tap(x => x.length ? \r\n                    console.log(`Found ingredients matching \"${term}\"`) :\r\n                    console.log(`No ingredients matching \"${term}\"`)),\r\n                catchError(this.handleError<Ingredient[]>('searchIngredients', []))\r\n            );\r\n    }\r\n\r\n    confirmIngredients(term: string): Observable<ActiveIngredient[]> {\r\n        return this._http.get<ActiveIngredient[]>(`${this.activeIngredientsUrl}${term}`)\r\n            .pipe(\r\n                tap(x => x.length ?\r\n                    console.log(\"Found active ingredients.\") :\r\n                    console.log(\"Found no active ingredients.\")),\r\n                    catchError(this.handleError<ActiveIngredient[]>('confirmIngredients', []))\r\n                );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(error);\r\n            console.log(`${operation} failed: ${error.message}`);\r\n            return of(result as T);\r\n        }\r\n    }\r\n}\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}